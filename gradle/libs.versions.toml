[versions]
# common libraries
adventure = "4.21.0"
annotations = "26.0.2"
configapi = "5.0.0-rc.2"
codec4j = "0.2.0-beta.4"
event4j = "4.0.2"
hikaricp = "7.0.2"
messages = "0.8.0"
snakeyaml = "2.4"

# gradle plugins
run-server = "3.0.0-beta.1"
gradle-plugins = "1.5.1"

# testing library
junit = "5.13.4"

# test environment
mockito = "5.19.0"
slf4j = "2.0.17"
sqlite-jdbc = "3.50.3.0"

# platform api
paper = "1.21.8-R0.1-SNAPSHOT"
paper-javadoc = "1.21.8"

# plugin api
coreprotect = "23.0"
lwc = "2.4.0"
bolt = "1.1.74"
worldguard = "7.0.14"

[libraries]

# common libraries
annotations = { module = "org.jetbrains:annotations", version.ref = "annotations" }
codec4j-io-gson = { module = "dev.siroshun.codec4j:codec4j-io-gson", version.ref = "codec4j" }
codec4j-io-gzip = { module = "dev.siroshun.codec4j:codec4j-io-gzip", version.ref = "codec4j" }
configapi-codec = { module = "dev.siroshun.configapi:configapi-codec", version.ref = "configapi" }
configapi-format-binary = { module = "dev.siroshun.configapi:configapi-format-binary", version.ref = "configapi" }
configapi-format-yaml = { module = "dev.siroshun.configapi:configapi-format-yaml", version.ref = "configapi" }
configapi-serialization-record = { module = "dev.siroshun.configapi:configapi-serialization-record", version.ref = "configapi" }
event4j = { module = "dev.siroshun.event4j:event4j-tree", version.ref = "event4j" }
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricp" }
messages = { module = "com.github.siroshun09.messages:messages-minimessage", version.ref = "messages" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }

# testing library
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }

# test environment
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
sqlite-jdbc = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite-jdbc" }

# platform api
paper = { module = "io.papermc.paper:paper-api", version.ref = "paper" }

# plugin api
coreprotect = { module = "net.coreprotect:coreprotect", version.ref = "coreprotect" }
lwc = { module = "com.griefcraft:lwc", version.ref = "lwc" }
bolt-bukkit = { module = "org.popcraft:bolt-bukkit", version.ref = "bolt" }
bolt-common = { module = "org.popcraft:bolt-common", version.ref = "bolt" }
worldguard = { module = "com.sk89q.worldguard:worldguard-bukkit", version.ref = "worldguard" }

[plugins]

run-server = { id = "xyz.jpenilla.run-paper", version.ref = "run-server" }
bundler = { id = "dev.siroshun.gradle.plugins.bundler", version.ref = "gradle-plugins" }
jcommon = { id = "dev.siroshun.gradle.plugins.jcommon", version.ref = "gradle-plugins" }
aggregated-javadoc = { id = "dev.siroshun.gradle.plugins.aggregated-javadoc", version.ref = "gradle-plugins" }
aggregated-javadoc-collector = { id = "dev.siroshun.gradle.plugins.aggregated-javadoc-collector", version.ref = "gradle-plugins" }
mavenPublication = { id = "dev.siroshun.gradle.plugins.maven-publication", version.ref = "gradle-plugins" }
